import{_ as o,c as s,o as i,j as e,a}from"./chunks/framework.CHka9bPJ.js";const G=JSON.parse('{"title":"Cómo Empezar","description":"¿Qué es Git?","frontmatter":{"title":"Cómo Empezar","description":"¿Qué es Git?","next":{"link":"/es/learn/development/git/next","label":"Programming Language Types"}},"headers":[],"relativePath":"es/learn/development/git/get-started.md","filePath":"es/learn/development/git/get-started.md","lastUpdated":1716804882000}'),t={name:"es/learn/development/git/get-started.md"},r=e("h1",{id:"¿que-es-git",tabindex:"-1"},[a("¿Qué es Git? "),e("a",{class:"header-anchor",href:"#¿que-es-git","aria-label":'Permalink to "¿Qué es Git?"'},"​")],-1),n=e("p",null,"Git es un sistema distribuido de control de versiones diseñado para realizar un seguimiento de los cambios en el código fuente durante el desarrollo de software. Permite a múltiples desarrolladores colaborar en proyectos de forma eficiente gestionando las revisiones, facilitando la ramificación y la fusión, y proporcionando un historial completo de los cambios realizados en el código base.",-1),d=e("h2",{id:"historia-de-git",tabindex:"-1"},[a("Historia de Git "),e("a",{class:"header-anchor",href:"#historia-de-git","aria-label":'Permalink to "Historia de Git"'},"​")],-1),l=e("p",null,"Git fue creado por Linus Torvalds en 2005, el mismo desarrollador detrás del núcleo Linux. Torvalds desarrolló Git para hacer frente a las limitaciones de los sistemas de control de versiones existentes como CVS y Subversion. Quería un sistema que fuera rápido, distribuido y capaz de manejar la escala masiva del desarrollo del núcleo Linux.",-1),c=e("p",null,"Git se hizo rápidamente popular en la comunidad de código abierto por su velocidad, flexibilidad y robusto modelo de ramificación. Desde entonces se ha convertido en el estándar de facto para el control de versiones en el desarrollo de software, utilizado por individuos, pequeños equipos y grandes corporaciones en todo el mundo.",-1),u=e("p",null,"El éxito de Git puede atribuirse a su naturaleza descentralizada, que permite a los desarrolladores trabajar sin conexión, confirmar cambios localmente y sincronizarse con repositorios remotos cuando es necesario. Esta flexibilidad, combinada con sus potentes funciones, ha convertido a Git en una herramienta esencial para los flujos de trabajo modernos de desarrollo de software.",-1),m=[r,n,d,l,c,u];function p(f,h,_,g,b,v){return i(),s("div",null,m)}const z=o(t,[["render",p]]);export{G as __pageData,z as default};
